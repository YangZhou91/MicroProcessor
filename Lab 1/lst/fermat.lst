


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             text, CODE, READONLY
    2 00000000                 EXPORT           fermat1
    3 00000000         fermat1
    4 00000000         ; The following code is used to enable FPU
    5 00000000         ; CPACR is located at address 0xE000ED88 
    6 00000000 F8DF 00A4       LDR.W            R0, =0xE000ED88
    7 00000004         ; Read CPACR
    8 00000004 6801            LDR              R1, [R0]
    9 00000006         ; Set bits 20-23 to enable CP10 and CP11 coprocessors 
   10 00000006 F441 0170       ORR              R1, R1, #(0xF << 20)
   11 0000000A         ; Write back the modified value to the CPACR
   12 0000000A 6001            STR              R1, [R0]    ; wait for store to
                                                             complete
   13 0000000C F3BF 8F4F       DSB
   14 00000010         ;reset pipeline now the FPU is enabled
   15 00000010 F3BF 8F6F       ISB
   16 00000014         
   17 00000014 F04F 0011       MOV              R0, #17     ; Assign 100 to reg
                                                            ister R0, assume it
                                                            's N.
   18 00000018 2800            CMP              R0, #0
   19 0000001A BFDC 2106       MOVLE            R1, #6      ; f1 = 0 ; for debu
                                                            g purpose used 6 an
                                                            d 7 to see register
                                                             values changing fr
                                                            om zero -> somethin
                                                            g
   20 0000001E 2207            MOVLE            R2, #7      ; f2 = 0
   21 00000020 DA00            BGE              Odd_Even_Check
   22 00000022 4770            BX               LR
   23 00000024         
   24 00000024         Odd_Even_Check
   25 00000024 F010 0F01       TST              R0, #1      ; Even or Odd test,
                                                             the Z flag will be
                                                             set if R0 AND is z
                                                            ero, i.e if R1 is e
                                                            ven
   26 00000028 D000            BEQ              N_is_even
   27 0000002A D104            BNE              N_is_odd
   28 0000002C         
   29 0000002C         N_is_even
   30 0000002C F04F 0102       MOV              R1, #2      ; f1 = 2
   31 00000030 FBB0 F2F1       UDIV             R2, R0, R1
   32 00000034 D1FF            BNE              N_is_odd
   33 00000036         
   34 00000036         N_is_odd
   35 00000036 EE00 0A10       VMOV             S0, R0      ; S0 -> N
   36 0000003A EEF7 0A00       VMOV.F32         S1, #1      ; S1 contains 1.0
   37 0000003E         
   38 0000003E EEB8 0A40       VCVT.F32.U32     S0, S0      ; convert N from in
                                                            t to float
   39 00000042 EEB1 1AC0       VSQRT.F32        S2, S0      ; compute sqrt of N
                                                             
   40 00000046         
   41 00000046 EEFC 1AC1       VCVT.U32.F32     S3, S2      ; convert sqrt of N
                                                             from float to near
                                                            est uint
   42 0000004A EEF8 1A61       VCVT.F32.U32     S3, S3      ; convert it back t
                                                            o float uint to flo



ARM Macro Assembler    Page 2 


                                                            at
   43 0000004E         
   44 0000004E EEB4 1A61       VCMP.F32         S2, S3      ; comparison betwee
                                                            n squartroot and it
                                                            s int
   45 00000052 BFC8 EE70 
              0AA1             VADDGT.F32       S1, S1, S3  ; positive result s
                                                            ets FPSCR flag to G
                                                            T: 0010 -> weird
   46 00000058 BF08 EEF0 
              0A61             VMOVEQ.F32       S1, S3      ; equal comparison 
                                                            sets FPSCR to EQ: 0
                                                            110
   47 0000005E         ; register S1 now has the ceiling value          
   48 0000005E         ;-------------------------------------------------------
                       --------------------------
   49 0000005E         
   50 0000005E EE60 2AA0       VMUL.F32         S5, S1, S1  ; temp = x^2 -> S5
   51 00000062 EE72 2AC0       VSUB.F32         S5, S5, S0  ; y^2 = x^2 - N -> 
                                                            S5 to be y^2
   52 00000066         
   53 00000066         ;MOV     R4, #1  ; Assign 1 to an integer register.
   54 00000066 EEF7 3A00       VMOV.F32         S7, #1      ; Assign 1 to a 32-
                                                            bit register reg co
                                                            ntains 1
   55 0000006A E7FF            B                while_loop
   56 0000006C         
   57 0000006C         while_loop
   58 0000006C EEB1 3AE2       VSQRT.F32        S6, S5      ; y = sqrt(y^2), th
                                                            e default rounding 
                                                            is to 0.
   59 00000070         ;conversoin needed
   60 00000070 EEBC 3AC3       VCVT.U32.F32     S6, S6
   61 00000074 EEB8 3A43       VCVT.F32.U32     S6, S6
   62 00000078 EE23 3A03       VMUL.F32         S6, S6, S6  ; Compute the y^2 a
                                                            gain
   63 0000007C EEF4 2A43       VCMP.F32         S5, S6      ; Test equivalence 
                                                            of two y^2
   64 00000080 EEF1 FA10       VMRS             APSR_nzcv, FPSCR
   65 00000084         
   66 00000084 D007            BEQ              Final
   67 00000086 BFC2 EE70 
              0AA3             VADDGT.F32       S1, S1, S7  ; x = x + 1
   68 0000008C EE20 2AA0       VMULGT.F32       S4, S1, S1  ; temp = x^2 -> S4
   69 00000090 EE72 2A40       VSUBGT.F32       S5, S4, S0  ; y^2 = x^2 - N
   70 00000094 DCEA            BGT              while_loop
   71 00000096         
   72 00000096         Final
   73 00000096 EEB1 3AC3       VSQRT.F32        S6, S6
   74 0000009A BF04 EE70 
              0A83             VADDEQ.F32       S1, S1, S6
   75 000000A0 EE30 1AC3       VSUBEQ.F32       S2, S1, S6
   76 000000A4         
   77 000000A4 4770            BX               LR          ;
   78 000000A6                 END                          ;
              00 00 E000ED88 
Command Line: --debug --xref --cpu=Cortex-M4.fp --apcs=interwork --depend=.\obj
\fermat.d -o.\obj\fermat.o -I"C:\Program Files\Keil\ARM\RV31\INC" -I"C:\Program
 Files\Keil\ARM\CMSIS\Include" -I"C:\Program Files\Keil\ARM\Inc\ST\STM32F4xx" -



ARM Macro Assembler    Page 3 


-predefine="__EVAL SETA 1" --list=.\lst\fermat.lst src\Fermat.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Final 00000096

Symbol: Final
   Definitions
      At line 72 in file src\Fermat.s
   Uses
      At line 66 in file src\Fermat.s
Comment: Final used once
N_is_even 0000002C

Symbol: N_is_even
   Definitions
      At line 29 in file src\Fermat.s
   Uses
      At line 26 in file src\Fermat.s
Comment: N_is_even used once
N_is_odd 00000036

Symbol: N_is_odd
   Definitions
      At line 34 in file src\Fermat.s
   Uses
      At line 27 in file src\Fermat.s
      At line 32 in file src\Fermat.s

Odd_Even_Check 00000024

Symbol: Odd_Even_Check
   Definitions
      At line 24 in file src\Fermat.s
   Uses
      At line 21 in file src\Fermat.s
Comment: Odd_Even_Check used once
fermat1 00000000

Symbol: fermat1
   Definitions
      At line 3 in file src\Fermat.s
   Uses
      At line 2 in file src\Fermat.s
Comment: fermat1 used once
text 00000000

Symbol: text
   Definitions
      At line 1 in file src\Fermat.s
   Uses
      None
Comment: text unused
while_loop 0000006C

Symbol: while_loop
   Definitions
      At line 57 in file src\Fermat.s
   Uses
      At line 55 in file src\Fermat.s
      At line 70 in file src\Fermat.s

7 symbols



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

341 symbols in table
